- name: Upload evercam-media code to the server
  synchronize:
    src: "{{local_media_dir}}/"
    dest: "{{build_dir}}/"
    rsync_opts:
      - "--no-motd"
      - "--exclude=.git"
      - "--exclude=_build"
      - "--exclude=deps"
      - "--exclude=node_modules"
      - "--exclude=rel"

- name: Get evercam-media dependencies
  shell: "{{mix_env_vars}} {{media_env_vars}} mix deps.get"
  args:
    chdir: "{{build_dir}}"

# - name: Test evercam-media
#   shell: "mix test"
#   args:
#     chdir: "{{build_dir}}"

- name: Build evercam-media application release
  shell: "{{mix_env_vars}} {{media_env_vars}} mix do clean, compile, release"
  args:
    chdir: "{{build_dir}}"

- name: Register the version of the release
  shell: "cat {{build_dir}}/rel/evercam_media/releases/start_erl.data | awk '{print $2}'"
  register: evercam_media_version

- name: Ensure there is a directory for the new version
  file: path="{{remote_media_dir}}" state=directory

- name: Copy the release to the production server
  unarchive:
    copy: no
    src: "{{build_dir}}/rel/evercam_media/evercam_media-{{evercam_media_version.stdout}}.tar.gz"
    dest: "{{remote_media_dir}}"

- name: Check if motion detection file exists
  stat:
    path: "{{build_dir}}/priv_dir/lib_elixir_motiondetection.so"
  register: motion_detection_file

- name: Ensure priv_dir exists
  file: path="{{remote_media_dir}}/priv_dir" state=directory
  when: motion_detection_file.stat.exists == True

- name: Upload motion detecion file
  shell: "cp {{build_dir}}/priv_dir/lib_elixir_motiondetection.so {{remote_media_dir}}/priv_dir/"
  when: motion_detection_file.stat.exists == True

- name: Ensure /usr/local/bin dir exists
  file: path=/usr/local/bin state=directory
  sudo: yes

- name: Copy evercam_media run init script
  sudo: yes
  template:
    src: run_evercam_media.sh.j2
    dest: /usr/local/bin/run_evercam_media.sh
    owner: root
    group: root
    mode: 0755

- name: Install the evercam_media init script
  sudo: yes
  template:
    src: evercam_media.conf.j2
    dest: /etc/init/evercam_media.conf
    owner: root
    group: root
    mode: 0755

- name: Start production server
  shell: sudo start evercam_media
  failed_when: False
